pipeline:
  name: Oracle Please
  identifier: Oracle_Please
  projectIdentifier: Arunav
  orgIdentifier: SE_Sandbox
  tags: {}
  stages:
    - stage:
        name: TF
        identifier: TF
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformApply
                  name: TerraformApply_1
                  identifier: TerraformApply_1
                  spec:
                    provisionerIdentifier: A
                    configuration:
                      type: Inline
                      spec:
                        configFiles:
                          store:
                            spec:
                              connectorRef: Arunav_GH
                              repoName: tf-oci-arm
                              gitFetchType: Branch
                              branch: main
                              folderPath: /
                            type: Github
                          moduleSource:
                            useConnectorCredentials: false
                        environmentVariables:
                          - name: region
                            value: us-phoenix-1
                            type: String
                          - name: tenancy_ocid
                            value: <+secrets.getValue("OCI_tenancy_ID")>
                            type: String
                          - name: user_ocid
                            value: <+secrets.getValue("OCI_user_ID")>
                            type: String
                          - name: fingerprint
                            value: <+secrets.getValue("OCI_API_fingerprint")>
                            type: String
                          - name: github_user
                            value: asarkar157
                            type: String
                          - name: oci_compartment_id
                            value: ocid1.tenancy.oc1..aaaaaaaav7owv6i2e5wyksmc2wha26ogyygjhw6y62xrl3dsyuxs724dulka
                            type: String
                          - name: tailscale_auth_key
                            value: <+secrets.getValue("tailscale_auth_key")>
                            type: String
                          - name: private_key_path
                            value: /harness/key.pem
                            type: String
                          - name: auth
                            value: <+secrets.getValue("OCI_auth_key")>
                            type: String
                        varFiles:
                          - varFile:
                              spec:
                                content: |-
                                  region="us-phoenix-1"
                                  tenancy_ocid="<+secrets.getValue("OCI_tenancy_ID")>"
                                  user_ocid="<+secrets.getValue("OCI_user_ID")>"
                                  fingerprint="<+secrets.getValue("OCI_API_fingerprint")>"
                                  github_user="asarkar157"
                                  oci_compartment_id="ocid1.tenancy.oc1..aaaaaaaav7owv6i2e5wyksmc2wha26ogyygjhw6y62xrl3dsyuxs724dulka"
                                  tailscale_auth_key="<+secrets.getValue("tailscale_auth_key")>"
                                  oci_auth="<+secrets.getValue("OCI_auth_key")>"
                                  private_key="<+secrets.getValue("OCI_key")>"
                              identifier: A
                              type: Inline
                  timeout: 10m
        tags: {}
    - stage:
        name: Trigger Oracle Stack
        identifier: Trigger_Oracle_Stack
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: Dockerhub_Arunav
                    image: ubuntu
                    shell: Sh
                    command: |
                      #!/bin/bash

                      apt-get update
                      apt-get install -y curl
                      apt-get install -y openssl
                      apt-get install -y uuid-runtime

                      #cd $HOME

                      # Oracle Cloud Infrastructure API Endpoint
                      OCI_API_ENDPOINT="https://resourcemanager.us-sanjose-1.oraclecloud.com"

                      # OCI Identity Domain (Tenancy) OCID
                      TENANCY_OCID="<+secrets.getValue("OCI_tenancy_ID")>"

                      # OCI User OCID
                      USER_OCID="<+secrets.getValue("OCI_user_ID")>"

                      # OCI User's API Key Fingerprint
                      API_KEY_FINGERPRINT="<+secrets.getValue("OCI_API_fingerprint")>"

                      # Replace this with your actual private key content
                      PRIVATE_KEY_CONTENT="<+secrets.getValue("OCI_key")>"

                      # Stack OCID (the ID of the stack you want to operate on)
                      STACK_OCID="<+secrets.getValue("OCID_stack_ID")>"

                      # Resource Action OCID (the ID of the resource action for the job)
                      RESOURCE_ACTION_OCID="your_resource_action_ocid_here"

                      # Authentication Details
                      AUTHENTICATION_DETAILS="$HOME/.oci/config"  # Use your OCI configuration file

                      # Generate a timestamp for the request
                      DATE=$(date -u "+%a, %d %h %Y %H:%M:%S GMT")

                      # Generate a unique request ID
                      #REQUEST_ID=$(cat /proc/sys/kernel/random/uuid)
                      REQUEST_ID=$(uuidgen)
                      # Request URL
                      REQUEST_URL="$OCI_API_ENDPOINT/20180917/resourceActions/$RESOURCE_ACTION_OCID/jobs"

                      # Request body with parameters (if needed)
                      REQUEST_BODY='{
                          "stackId": "'$STACK_OCID'",
                          "executionPlanStrategy": "AUTO_APPROVED"
                      }'

                      # Generate the signature string
                      SIGNATURE_STRING="date: $DATE"

                      # Create a temporary file to store the private key content
                      temp_key_file=$(tempfile)
                      #echo -n "$PRIVATE_KEY_CONTENT" > "$temp_key_file"
                      touch key.txt
                      chmod 777 key.txt
                      echo -n "$PRIVATE_KEY_CONTENT" > key.txt


                      SIGNATURE=$(echo -en "$SIGNATURE_STRING" | openssl dgst -sha256 -sign "$(cat key.txt)" | openssl enc -e -base64)

                      #SIGNATURE=$(echo -en "$SIGNATURE_STRING" | openssl dgst -sha256 -sign "$(cat $temp_key_file)" | openssl enc -e -base64)

                      cat $temp_key_file
                      # Remove the temporary key file
                      rm -f "$temp_key_file"

                      #SIGNATURE=$(echo -en "$SIGNATURE_STRING" | openssl dgst -sha256 -sign <(echo -n "$PRIVATE_KEY_CONTENT") | openssl enc -e -base64)

                      # Make the API request
                      curl -X POST -sS $REQUEST_URL \
                          -H "Authorization: Signature $USER_OCID:$API_KEY_FINGERPRINT:$SIGNATURE" \
                          -H "Content-Type: application/json" \
                          -H "Date: $DATE" \
                          -H "RequestId: $REQUEST_ID" \
                          --data "$REQUEST_BODY" \
                          --config $AUTHENTICATION_DETAILS

                      # Add error handling and processing of the response as needed
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
    - stage:
        name: Trigger Oracle Stack Job
        identifier: Trigger_Oracle_Stack_Job
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Trigger
                  identifier: Trigger
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          #!/bin/bash
                          sudo apt-get install uuid-runtime
                          # Oracle Cloud Infrastructure API Endpoint
                          OCI_API_ENDPOINT="https://resourcemanager.us-sanjose-1.oraclecloud.com"

                          # OCI Identity Domain (Tenancy) OCID
                          TENANCY_OCID="<+secrets.getValue("OCI_tenancy_ID")>"

                          # OCI User OCID
                          USER_OCID="<+secrets.getValue("OCI_user_ID")>"

                          # OCI User's API Key Fingerprint
                          API_KEY_FINGERPRINT="<+secrets.getValue("OCI_API_fingerprint")>"

                          # Replace this with your actual private key content
                          PRIVATE_KEY_CONTENT="<+secrets.getValue("OCI_key")>"

                          # Stack OCID (the ID of the stack you want to operate on)
                          STACK_OCID="<+secrets.getValue("OCID_stack_ID")>"

                          # Resource Action OCID (the ID of the resource action for the job)
                          RESOURCE_ACTION_OCID="your_resource_action_ocid_here"

                          # Authentication Details
                          AUTHENTICATION_DETAILS="$HOME/.oci/config"  # Use your OCI configuration file

                          # Generate a timestamp for the request
                          DATE=$(date -u "+%a, %d %h %Y %H:%M:%S GMT")

                          # Generate a unique request ID
                          REQUEST_ID=$(uuidgen)

                          # Request URL
                          REQUEST_URL="$OCI_API_ENDPOINT/20180917/resourceActions/$RESOURCE_ACTION_OCID/jobs"

                          # Request body with parameters (if needed)
                          REQUEST_BODY='{
                              "stackId": "'$STACK_OCID'",
                              "executionPlanStrategy": "AUTO_APPROVED"
                          }'

                          # Generate the signature string
                          SIGNATURE_STRING="date: $DATE"
                          SIGNATURE=$(echo -en "$SIGNATURE_STRING" | openssl dgst -sha256 -sign <(echo -n "$PRIVATE_KEY_CONTENT") | openssl enc -e -base64)

                          # Make the API request
                          curl -X POST -sS $REQUEST_URL \
                              -H "Authorization: Signature $USER_OCID:$API_KEY_FINGERPRINT:$SIGNATURE" \
                              -H "Content-Type: application/json" \
                              -H "Date: $DATE" \
                              -H "RequestId: $REQUEST_ID" \
                              --data "$REQUEST_BODY" \
                              --config $AUTHENTICATION_DETAILS

                          # Add error handling and processing of the response as needed
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
